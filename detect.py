
# Import Libraries
import cv2
import time
import mediapipe as mp
import numpy as np 

from ws_client import RobotWebSocketConnection


W=320
H=240

# XXX A list of hand gestures here:
gesture = []

gesture.append({"who": "perri", "cmd": "backward"	, "name": "fist"			, "min":  [np.array([0.95585, 0.00000, 0.49283]), np.array([0.75429, 0.00000, 0.48353]), np.array([0.65380, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.29819]), np.array([1.00000, 0.00000, 0.41175]), np.array([0.43636, 0.00000, 0.04044]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.50845, 0.00000]), np.array([0.00000, 0.51969, 0.00000]), np.array([0.89156, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.48320, 0.09232]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 0.85219, 0.00000]), np.array([0.00000, 0.52110, 0.05636])] , "max":  [np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.00000, 0.85294]), np.array([1.00000, 0.00000, 0.72827]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.92499, 0.50521]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.23109]), np.array([1.00000, 1.00000, 0.80440]), np.array([1.00000, 0.88710, 0.42604]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.22634]), np.array([0.54685, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.42188]), np.array([1.00000, 1.00000, 1.00000]), np.array([0.85589, 1.00000, 0.32798]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 0.77782, 0.52661]), np.array([1.00000, 1.00000, 0.29647]), np.array([0.00000, 1.00000, 1.00000])]})
gesture.append({"who": "perri", "cmd": "stop"		, "name": "hand_spayed"	, "min":  [np.array([1.00000, 0.00000, 0.56291]), np.array([0.55322, 0.00000, 0.81690]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.35356]), np.array([1.00000, 0.00000, 0.32165]), np.array([1.00000, 0.00000, 0.01772]), np.array([1.00000, 0.00000, 0.49401]), np.array([0.00000, 0.00000, 0.91313]), np.array([1.00000, 0.00000, 0.46523]), np.array([0.95858, 0.00000, 0.51306]), np.array([0.97636, 0.00000, 0.55041]), np.array([0.00000, 0.65072, 0.49680]), np.array([1.00000, 0.00000, 0.49030]), np.array([0.97956, 0.00000, 0.50676]), np.array([0.85075, 0.00000, 0.56529]), np.array([0.00000, 1.00000, 0.31072]), np.array([0.90573, 0.00000, 0.48374]), np.array([0.92573, 0.00000, 0.47308]), np.array([0.53076, 0.00000, 0.66849]), np.array([0.54560, 0.00000, 0.70209]), np.array([0.56710, 0.00000, 0.69002])] , "max":  [np.array([1.00000, 0.00000, 0.92124]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.17109, 0.32516]), np.array([1.00000, 0.00000, 0.79006]), np.array([1.00000, 0.00000, 0.75934]), np.array([1.00000, 0.00000, 0.58836]), np.array([1.00000, 0.00000, 0.93064]), np.array([0.11516, 1.00000, 1.00000]), np.array([1.00000, 0.00000, 0.98751]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 0.00000, 0.95073]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([0.00000, 1.00000, 0.81206]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000])]})
gesture.append({"who": "perri", "cmd": "nod"		, "name": "thumbs_up"		, "min":  [np.array([1.00000, 0.00000, 0.39727]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.62124]), np.array([1.00000, 0.00000, 0.42162]), np.array([1.00000, 0.00000, 0.25450]), np.array([1.00000, 0.00000, 0.21658]), np.array([0.88831, 0.10038, 0.00000]), np.array([0.21810, 1.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.77544, 0.10992]), np.array([0.69664, 0.06500, 0.00000]), np.array([0.10744, 1.00000, 0.00000]), np.array([0.00000, 1.00000, 0.10169]), np.array([0.00000, 0.35006, 0.47936]), np.array([0.44619, 0.00000, 0.00000]), np.array([0.02744, 1.00000, 0.00000]), np.array([0.00000, 0.83034, 0.36585]), np.array([0.00000, 0.04464, 0.69747]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.62878, 0.38915]), np.array([0.00000, 0.00000, 1.00000])] , "max":  [np.array([1.00000, 0.00000, 0.66765]), np.array([1.00000, 0.51457, 0.02524]), np.array([1.00000, 0.00000, 0.99586]), np.array([1.00000, 0.00000, 0.65070]), np.array([1.00000, 0.00000, 0.62862]), np.array([1.00000, 0.00000, 0.96139]), np.array([1.00000, 1.00000, 0.00000]), np.array([0.71916, 1.00000, 0.00000]), np.array([0.52922, 1.00000, 0.48489]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.00000]), np.array([0.50071, 1.00000, 0.00000]), np.array([0.00000, 1.00000, 0.82712]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.10443]), np.array([0.39281, 1.00000, 0.00000]), np.array([0.00000, 1.00000, 1.00000]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.34353]), np.array([0.00000, 1.00000, 1.00000]), np.array([0.09877, 0.94651, 1.00000])] })
gesture.append({"who": "perri", "cmd": "forward"	, "name": "point_up"		, "min":  [np.array([1.00000, 0.00000, 0.62062]), np.array([0.82257, 0.00000, 0.90755]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.35816]), np.array([1.00000, 0.00000, 0.28275]), np.array([0.20836, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.59496]), np.array([0.00000, 0.86020, 0.70002]), np.array([1.00000, 0.00000, 0.63569]), np.array([0.90017, 0.00000, 0.76191]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.45515]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.54587, 0.01681]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.36334]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.45760, 0.22561]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.67788, 0.18304])] , "max":  [np.array([1.00000, 0.00000, 0.80575]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.01634, 0.30892]), np.array([1.00000, 0.00000, 0.69084]), np.array([1.00000, 0.00000, 0.92514]), np.array([1.00000, 0.34677, 1.00000]), np.array([1.00000, 0.00000, 0.82552]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 0.00000, 0.94297]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.29691, 0.50770]), np.array([0.00000, 1.00000, 0.69303]), np.array([0.44493, 1.00000, 0.14516]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 0.59323, 0.54909]), np.array([0.00000, 1.00000, 0.61285]), np.array([0.34267, 1.00000, 0.30975]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 0.55872, 0.58655]), np.array([0.51952, 1.00000, 0.24545]), np.array([0.00000, 1.00000, 1.00000])] })
gesture.append({"who": "perri", "cmd": "right"		, "name": "point_right"	, "min":  [np.array([0.44360, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 0.62109]), np.array([0.00000, 0.00831, 1.00000]), np.array([0.00000, 0.00000, 1.00000]), np.array([0.00000, 0.00000, 1.00000]), np.array([0.00000, 0.00000, 0.80751]), np.array([0.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.02321, 1.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([1.00000, 0.13533, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.05555]), np.array([0.00000, 1.00000, 0.06034])] , "max":  [np.array([0.78702, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 0.88009]), np.array([0.00000, 0.83504, 1.00000]), np.array([0.55971, 0.20104, 1.00000]), np.array([0.68884, 0.28748, 1.00000]), np.array([0.03047, 1.00000, 1.00000]), np.array([1.00000, 0.26757, 1.00000]), np.array([1.00000, 0.11792, 0.32505]), np.array([0.59875, 1.00000, 0.00000]), np.array([0.44387, 1.00000, 0.23421]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.42653, 0.01820]), np.array([0.28463, 1.00000, 0.20073]), np.array([0.54799, 1.00000, 0.23986]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.61836, 0.00000]), np.array([0.08806, 1.00000, 0.49514]), np.array([0.28185, 1.00000, 0.38039]), np.array([1.00000, 1.00000, 1.00000]), np.array([0.00000, 1.00000, 0.61731]), np.array([0.00000, 1.00000, 0.51379])] })
gesture.append({"who": "perri", "cmd": "left"		, "name": "point_left"	, "min":  [np.array([1.00000, 0.00000, 0.42396]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.79426, 0.00000, 0.71856]), np.array([1.00000, 0.00000, 0.40217]), np.array([1.00000, 0.00000, 0.07535]), np.array([0.73614, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.26197, 1.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.67002, 0.00000, 0.00000]), np.array([0.09569, 1.00000, 0.00000]), np.array([0.00000, 0.07873, 0.00000]), np.array([0.00000, 0.11295, 0.00000]), np.array([0.48964, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.74375, 0.52971]), np.array([0.00000, 0.14860, 0.67726]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.73706, 0.74460]), np.array([0.00000, 0.11261, 0.90241])] , "max":  [np.array([1.00000, 0.00000, 0.83539]), np.array([1.00000, 0.37273, 0.36414]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 0.78558]), np.array([1.00000, 0.00000, 0.81174]), np.array([1.00000, 0.54598, 1.00000]), np.array([1.00000, 0.39460, 0.60655]), np.array([0.88424, 1.00000, 0.00000]), np.array([1.00000, 0.52119, 0.30921]), np.array([1.00000, 0.53136, 0.27766]), np.array([1.00000, 1.00000, 0.29004]), np.array([0.47328, 1.00000, 0.00000]), np.array([1.00000, 1.00000, 0.97678]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.42565]), np.array([0.38422, 1.00000, 0.00607]), np.array([0.00000, 1.00000, 1.00000]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([0.00000, 1.00000, 1.00000]), np.array([0.00000, 1.00000, 1.00000])] })
gesture.append({"who": "perri", "cmd": "spin"		, "name": "ok_hand"		, "min":  [np.array([1.00000, 0.00000, 0.62360]), np.array([0.87685, 0.00000, 0.63741]), np.array([1.00000, 0.00000, 0.08373]), np.array([1.00000, 0.00000, 0.24162]), np.array([1.00000, 0.00000, 0.03435]), np.array([1.00000, 0.00000, 0.15174]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.74711, 0.40434, 0.00000]), np.array([0.39768, 0.94789, 0.00000]), np.array([1.00000, 0.00000, 0.44785]), np.array([0.00000, 1.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.55197]), np.array([0.00000, 1.00000, 0.00000]), np.array([1.00000, 0.00000, 0.08530]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.52979, 0.00000, 0.60100]), np.array([0.79711, 0.00000, 0.35223]), np.array([0.88978, 0.00000, 0.00000])] , "max":  [np.array([1.00000, 0.00000, 0.89854]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 0.45013]), np.array([1.00000, 0.00000, 0.58125]), np.array([1.00000, 0.00000, 0.47495]), np.array([1.00000, 0.00000, 0.91801]), np.array([1.00000, 0.20821, 0.38223]), np.array([0.44942, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.00000]), np.array([1.00000, 1.00000, 0.00000]), np.array([1.00000, 0.00000, 0.77395]), np.array([0.10008, 1.00000, 0.68710]), np.array([1.00000, 0.17473, 0.52031]), np.array([1.00000, 0.69154, 0.53841]), np.array([1.00000, 0.00000, 0.86291]), np.array([0.20791, 1.00000, 0.42161]), np.array([1.00000, 0.00000, 0.69656]), np.array([1.00000, 0.39042, 0.67414]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.05779, 1.00000])] })
gesture.append({"who": "perri", "cmd": "shake"		, "name": "thumbs_down"	, "min":  [np.array([1.00000, 0.13109, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.29654, 1.00000, 0.00000]), np.array([0.55652, 0.68420, 0.00000]), np.array([0.43145, 0.68549, 0.00000]), np.array([0.01805, 1.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.84078, 0.00000, 0.71319]), np.array([0.00000, 0.25107, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.94398, 0.00000, 0.00000]), np.array([0.75338, 0.00000, 0.75814]), np.array([0.00000, 0.93206, 0.00000]), np.array([0.00000, 0.00000, 0.62679]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.59036, 0.00000, 0.81820]), np.array([0.00000, 0.84557, 0.00000]), np.array([0.00000, 0.00000, 0.75429]), np.array([0.52179, 0.00000, 0.00000]), np.array([0.00000, 0.79195, 0.00000]), np.array([0.00000, 0.40451, 0.72513])] , "max":  [np.array([1.00000, 0.95195, 0.00000]), np.array([1.00000, 0.14445, 0.35263]), np.array([0.76067, 1.00000, 0.00000]), np.array([1.00000, 1.00000, 0.00000]), np.array([1.00000, 1.00000, 0.00000]), np.array([0.89423, 1.00000, 0.00000]), np.array([1.00000, 0.88218, 0.08503]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.09758]), np.array([1.00000, 0.00000, 1.00000]), np.array([0.32326, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.95779, 0.13541]), np.array([1.00000, 0.00000, 1.00000]), np.array([0.03012, 1.00000, 1.00000]), np.array([0.32502, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.52326]), np.array([0.82043, 1.00000, 1.00000]), np.array([0.00000, 1.00000, 1.00000])] })

gesture.append({"who": "lochyin", "cmd": "backward"	, "name": "fist"		, "min":  [np.array([1.00000, 0.00000, 0.11507]), np.array([0.70932, 0.00000, 0.28926]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.44032, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 0.39192, 0.91932]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 0.74220, 0.58316]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 1.00000, 0.01907]), np.array([0.88036, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.46138]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.70107, 0.13787]), np.array([0.47717, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.00000, 0.04959])] , "max":  [np.array([1.00000, 0.00000, 0.75468]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.57651, 0.33544]), np.array([1.00000, 0.44554, 0.67072]), np.array([1.00000, 0.88145, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.58705, 0.54043]), np.array([0.00000, 1.00000, 1.00000]), np.array([0.89124, 1.00000, 0.25131]), np.array([0.14306, 1.00000, 0.42507]), np.array([1.00000, 0.94745, 0.63602]), np.array([0.00000, 1.00000, 1.00000]), np.array([0.38865, 1.00000, 0.22070]), np.array([0.00000, 1.00000, 0.78095]), np.array([1.00000, 1.00000, 0.68528]), np.array([0.00000, 1.00000, 0.87874]), np.array([0.14813, 1.00000, 0.25563]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.59397]), np.array([0.28562, 1.00000, 0.21314]), np.array([1.00000, 1.00000, 1.00000])] })
gesture.append({"who": "lochyin", "cmd": "stop"		, "name": "hand_spayed"	, "min":  [np.array([0.95462, 0.00000, 0.00503]), np.array([0.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.96100, 0.00000, 0.00000]), np.array([0.95743, 0.00000, 0.00000]), np.array([0.84847, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.33323]), np.array([0.00000, 0.43755, 0.00000]), np.array([1.00000, 0.00000, 0.09062]), np.array([0.99129, 0.00000, 0.22467]), np.array([1.00000, 0.00000, 0.54049]), np.array([0.00000, 0.35038, 0.00000]), np.array([1.00000, 0.00000, 0.58065]), np.array([1.00000, 0.00000, 0.60403]), np.array([1.00000, 0.00000, 0.67455]), np.array([0.00000, 0.16888, 0.00000]), np.array([0.96391, 0.00000, 0.63470]), np.array([0.89407, 0.00000, 0.56754]), np.array([0.40420, 0.00000, 0.58498]), np.array([0.27838, 0.00000, 0.54474]), np.array([0.57068, 0.00000, 0.40494])] , "max":  [np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.39339, 0.77231]), np.array([1.00000, 0.22851, 1.00000]), np.array([1.00000, 0.44129, 1.00000]), np.array([1.00000, 0.62823, 1.00000]), np.array([1.00000, 0.00000, 0.86497]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.00000, 0.96019]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 0.91203]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.00000, 0.94537]), np.array([1.00000, 0.00000, 0.94841]), np.array([1.00000, 0.00000, 0.96544]), np.array([1.00000, 1.00000, 0.81488]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000])] })
gesture.append({"who": "lochyin", "cmd": "nod"		, "name": "thumbs_up"	, "min":  [np.array([1.00000, 0.00000, 0.46670]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.54653, 0.00000, 0.74369]), np.array([0.98724, 0.00000, 0.42749]), np.array([1.00000, 0.00000, 0.11457]), np.array([0.76578, 0.00000, 0.06261]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.27023, 0.85664, 0.00000]), np.array([0.00000, 0.91722, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.89268, 0.00000]), np.array([0.00000, 0.94925, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.75240, 0.00000]), np.array([0.00000, 0.65669, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.63799, 0.00000]), np.array([0.00000, 0.39664, 0.00000])] , "max":  [np.array([1.00000, 0.00000, 0.97968]), np.array([1.00000, 0.29890, 0.79493]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.00000, 0.89820]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.00000]), np.array([0.90529, 1.00000, 1.00000]), np.array([0.67857, 1.00000, 0.96384]), np.array([1.00000, 1.00000, 1.00000]), np.array([0.79711, 1.00000, 0.07882]), np.array([1.00000, 1.00000, 1.00000]), np.array([0.77066, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([0.62521, 1.00000, 0.19686]), np.array([1.00000, 1.00000, 1.00000]), np.array([0.77605, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([0.89778, 1.00000, 1.00000]), np.array([0.66816, 1.00000, 1.00000])] })
gesture.append({"who": "lochyin", "cmd": "forward"	, "name": "point_up"	, "min":  [np.array([1.00000, 0.00000, 0.19403]), np.array([0.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.23869, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.37846, 0.00000, 0.00000]), np.array([0.00000, 0.63121, 0.60886]), np.array([0.17052, 0.00000, 0.00000]), np.array([0.18673, 0.00000, 0.00000]), np.array([0.26563, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.39775]), np.array([0.06456, 0.66891, 0.00000]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.30664, 0.00000, 0.00000]), np.array([0.00000, 1.00000, 0.24062]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.24906, 0.00000, 0.00000]), np.array([0.00000, 0.92672, 0.00000]), np.array([0.00000, 0.00000, 0.00000])] , "max":  [np.array([1.00000, 0.00000, 0.90734]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.64170, 0.29464]), np.array([1.00000, 0.51420, 0.58198]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.95677]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.61729]), np.array([0.00000, 1.00000, 0.78089]), np.array([1.00000, 1.00000, 0.00000]), np.array([0.55794, 1.00000, 0.25484]), np.array([1.00000, 1.00000, 0.29826]), np.array([0.00000, 1.00000, 0.59886]), np.array([0.47123, 1.00000, 0.12175]), np.array([0.87886, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.56180]), np.array([1.00000, 1.00000, 0.01571]), np.array([1.00000, 1.00000, 1.00000])] })
gesture.append({"who": "lochyin", "cmd": "right"	, "name": "point_right"	, "min":  [np.array([0.51490, 0.00000, 0.39205]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.65160]), np.array([0.00000, 0.00000, 0.50572]), np.array([0.00000, 0.00000, 0.41363]), np.array([0.00000, 0.00000, 0.33364]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.21817, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.09035, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000])] , "max":  [np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.33388, 0.90806]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.22580, 1.00000]), np.array([1.00000, 0.60032, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.39520]), np.array([1.00000, 1.00000, 0.79001]), np.array([1.00000, 1.00000, 0.83029]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.14739]), np.array([1.00000, 1.00000, 0.83247]), np.array([1.00000, 1.00000, 0.81452]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.05691]), np.array([1.00000, 1.00000, 0.95562]), np.array([1.00000, 1.00000, 0.91628]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000])] })
gesture.append({"who": "lochyin", "cmd": "left"		, "name": "point_left"	, "min":  [np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.79703, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.41210, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.03540, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000])] , "max":  [np.array([1.00000, 0.27655, 0.91109]), np.array([1.00000, 0.71412, 0.72551]), np.array([1.00000, 0.45389, 1.00000]), np.array([1.00000, 0.09161, 0.76266]), np.array([1.00000, 0.68668, 0.70316]), np.array([1.00000, 1.00000, 0.83955]), np.array([1.00000, 1.00000, 0.21937]), np.array([1.00000, 1.00000, 0.73263]), np.array([1.00000, 1.00000, 0.38785]), np.array([1.00000, 1.00000, 0.38772]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.80724]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.91952]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000])] })
gesture.append({"who": "lochyin", "cmd": "spin"		, "name": "ok_hand"		, "min":  [np.array([0.81708, 0.00000, 0.54052]), np.array([0.89563, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.97397, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.72948, 0.00000, 0.00000]), np.array([0.92859, 0.00000, 0.57194]), np.array([0.00000, 1.00000, 0.00000]), np.array([0.99104, 0.00000, 0.00000]), np.array([0.90724, 0.00000, 0.00000]), np.array([0.83609, 0.00000, 0.43717]), np.array([0.00000, 0.85908, 0.00000]), np.array([0.87989, 0.00000, 0.00000]), np.array([0.80062, 0.00000, 0.00000]), np.array([0.46829, 0.00000, 0.00000]), np.array([0.76098, 0.00000, 0.00000]), np.array([0.71084, 0.00000, 0.00000])] , "max":  [np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 0.98231, 1.00000]), np.array([1.00000, 0.23760, 0.89811]), np.array([1.00000, 0.04727, 0.93443]), np.array([1.00000, 0.05954, 0.98007]), np.array([1.00000, 0.18658, 1.00000]), np.array([1.00000, 0.37876, 0.79148]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.79065, 0.82906]), np.array([1.00000, 1.00000, 0.90670]), np.array([1.00000, 0.00000, 1.00000]), np.array([0.99238, 1.00000, 0.74427]), np.array([1.00000, 0.38340, 1.00000]), np.array([1.00000, 0.98479, 1.00000]), np.array([1.00000, 0.00000, 1.00000]), np.array([1.00000, 1.00000, 0.45992]), np.array([1.00000, 0.32528, 1.00000]), np.array([1.00000, 0.93926, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 0.50706, 1.00000]), np.array([1.00000, 0.79242, 1.00000])] })
gesture.append({"who": "lochyin", "cmd": "shake"	, "name": "thumbs_down"	, "min":  [np.array([0.70173, 0.00000, 0.00000]), np.array([1.00000, 0.00000, 0.00000]), np.array([0.22375, 0.43271, 0.00000]), np.array([0.31051, 0.29659, 0.00000]), np.array([0.39314, 0.18252, 0.00000]), np.array([0.17857, 0.00000, 0.00000]), np.array([0.00000, 0.31492, 0.00000]), np.array([0.39299, 0.00000, 0.68588]), np.array([0.00000, 0.21279, 0.00000]), np.array([0.00000, 0.00000, 0.00000]), np.array([0.00000, 0.35530, 0.00000]), np.array([0.00000, 0.00000, 0.69567]), np.array([0.00000, 0.41596, 0.19289]), np.array([0.00000, 0.00000, 0.33360]), np.array([0.00000, 0.31432, 0.00000]), np.array([0.00000, 0.00000, 0.74461]), np.array([0.00000, 0.51945, 0.29974]), np.array([0.00000, 0.00000, 0.56213]), np.array([0.00000, 0.13244, 0.00000]), np.array([0.00000, 0.61560, 0.21936]), np.array([0.00000, 0.00000, 0.51039])] , "max":  [np.array([1.00000, 1.00000, 0.29229]), np.array([1.00000, 0.08174, 0.57419]), np.array([1.00000, 1.00000, 0.00000]), np.array([1.00000, 1.00000, 0.00000]), np.array([1.00000, 1.00000, 0.00000]), np.array([1.00000, 1.00000, 0.32857]), np.array([1.00000, 1.00000, 0.30740]), np.array([1.00000, 0.00000, 1.00000]), np.array([0.29078, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.43586]), np.array([1.00000, 0.42165, 1.00000]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.38344]), np.array([1.00000, 0.85027, 1.00000]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 0.48763]), np.array([0.00000, 1.00000, 1.00000]), np.array([1.00000, 1.00000, 1.00000])] })

# TODO Add more gestures


# Grabbing the Holistic Model from Mediapipe and
# Initializing the Model
mp_holistic = mp.solutions.holistic
holistic_model = mp_holistic.Holistic(
	min_detection_confidence=0.5,
	min_tracking_confidence=0.5
)

# Initializing the drawing utils for drawing the facial landmarks on image
mp_drawing = mp.solutions.drawing_utils

capture = cv2.VideoCapture(0)
capture.set(cv2.CAP_PROP_FRAME_WIDTH, W)
capture.set(cv2.CAP_PROP_FRAME_HEIGHT, H)

capture.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc('M', 'J', 'P', 'G'))
# Initializing current time and precious time for calculating the FPS
previousTime = 0
currentTime = 0


sock = RobotWebSocketConnection()
curr_command = "stop"


while capture.isOpened():


	time.sleep(0.1)

	# capture frame by frame
	ret, frame = capture.read()

	# Converting the from BGR to RGB
	image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

	# Making predictions using holistic model
	# To improve performance, optionally mark the image as not writeable to
	# pass by reference.
	image.flags.writeable = False
	results = holistic_model.process(image)
	image.flags.writeable = True

	# Converting back the RGB image to BGR
	image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)


	# Drawing Right hand Land Marks
	mp_drawing.draw_landmarks(
	image, 
	results.right_hand_landmarks, 
	mp_holistic.HAND_CONNECTIONS
	)

	# Drawing Left hand Land Marks
	mp_drawing.draw_landmarks(
	image, 
	results.left_hand_landmarks, 
	mp_holistic.HAND_CONNECTIONS
	)
	

	# XXX We assume only the right hand for now!

	connection_list = [(3, 4), (0, 5), (17, 18), (0, 17), (13, 14), (13, 17), (18, 19), (5, 6), (5, 9), (14, 15), (0, 1), (9, 10), (1, 2), (9, 13), (10, 11), (19, 20), (6, 7), (15, 16), (2, 3), (11, 12), (7, 8)]


	# If hand on screen.
	tmp = results.right_hand_landmarks
	if tmp:

		# Get vectors of relative hand coords.
		keypoints = []
		for data_point in tmp.landmark:

			data = np.array([data_point.x, data_point.y, data_point.z])
			keypoints.append(data)

		# Normalize them
		norm_vectors = []
		if len(keypoints) == 21:
			for i in range(0, 21):
				coord_a = keypoints[i]
				for j in connection_list:
					if j[0] == i:
						coord_b = keypoints[j[1]]

						vec_norm = np.array([coord_b[0] - coord_a[0], coord_b[1] - coord_a[1], coord_b[2] - coord_a[2]])
						data_norm = (vec_norm - vec_norm.min()) / (vec_norm.max() - vec_norm.min())
						norm_vectors.append(data_norm)


	# TODO detect a hand gesture and return the right action / name.

		gest_percent = []

		for i in gesture:
			matching = 0
			for j in range(0, 21):
				if i["min"][j][0] <= norm_vectors[j][0]:
					if i["min"][j][1] <= norm_vectors[j][1]:
						if i["min"][j][2] <= norm_vectors[j][2]:
							if i["max"][j][0] >= norm_vectors[j][0]:
								if i["max"][j][1] >= norm_vectors[j][1]:
									if i["max"][j][2] >= norm_vectors[j][2]:
										matching = matching + 1

			# if matching == 21:
			# 	print(i["name"], "(", i["who"], ")", ": ", round((matching/21*100), 1), "%  <<< ")
			# else:
			# 	print(i["name"], "(", i["who"], ")", ": ", round((matching/21*100), 1), "%")


			gest_percent.append([ i["name"], i["who"], i["cmd"], matching/21*100])


		if gest_percent:
			best_gesture = sorted(gest_percent, key = lambda x: x[3], reverse=True)[0]

			if best_gesture[3] > 85:
				print(best_gesture[0], "(", best_gesture[1], ")")
				new_command = best_gesture[2]
			else:
				print("no gesture recognized...")
				new_command = "stop"


	else:
		print("no hand found...")
		new_command = "stop"

	if new_command != curr_command:
		sock.send_command(new_command)
		curr_command = new_command


	# Calculating the FPS
	currentTime = time.time()
	fps = 1 / (currentTime-previousTime)
	previousTime = currentTime
	
	# Displaying FPS on the image
	cv2.putText(image, str(int(fps))+" FPS", (10, 70), cv2.FONT_HERSHEY_COMPLEX, 1, (0,255,0), 2)

	# Display the resulting image
	cv2.imshow("Facial and Hand Landmarks", image)

	# Enter key 'q' to break the loop
	if cv2.waitKey(5) & 0xFF == ord('q'):
		break

# When all the process is done
# Release the capture and destroy all windows
capture.release()
cv2.destroyAllWindows()
